name: continuous-integration/gh-actions/gui

on: [push, pull_request]

jobs:
  build-macos:

    runs-on: macOS-11
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: install dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install boost openssl zmq libpgm miniupnpc ldns expat libunwind-headers protobuf
    - name: install qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
    - name: add qt to path
      run: echo "$Qt5_Dir/bin" >> $GITHUB_PATH
    - name: check qt version
      run: qmake --version
    - name: fetch zmq.hpp
      run: brew tap osrf/simulation && brew install cppzmq
    - name: build
      run: ./build.sh
    - name: test qml
      run: build/release/bin/europacash-wallet-gui.app/Contents/MacOS/europacash-wallet-gui --test-qml
    - name: deploy
      run: make deploy
      working-directory: build
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static -j3
        cp build/release/bin/* ../build/release/bin/
        cp build/release/bin/europacashd ../build/release/bin/europacash-wallet-gui.app/Contents/MacOS/europacashd
      working-directory: monero
    - name: archive
      run: |
        export ARTIFACT_NAME="europacash-gui-mac-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        tar cvzf $ARTIFACT_NAME.tar.bz2 $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/release
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.tar.bz2
      working-directory: build/release
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: build/release/${{ env.ARTIFACT_NAME }}.tar.bz2
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.tar.bz2
        path: build/release/${{ env.ARTIFACT_NAME }}.tar.bz2
    - name: upload to transfer.sh
      run: curl --upload-file build/release/${{ env.ARTIFACT_NAME }}.tar.bz2 https://transfer.sh/${{ env.ARTIFACT_NAME }}.tar.bz2

  build-ubuntu:
 
    runs-on: ubuntu-18.04
 
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install europacash dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libsodium-dev
    - name: build & install static zmq
      run: |
        git clone https://github.com/zeromq/libzmq
        cd libzmq
        git checkout v4.3.2
        mkdir build && cd build
        cmake -D WITH_PERF_TOOL=OFF -D ZMQ_BUILD_TESTS=OFF -D ENABLE_CPACK=OFF -D CMAKE_BUILD_TYPE=Release ..
        make -j3
        sudo make install
        sudo curl -L https://raw.githubusercontent.com/zeromq/cppzmq/master/zmq.hpp --output /usr/local/include/zmq.hpp
      working-directory: ..
    - name: install dependencies for deployment
      run: sudo apt -y install libgstreamer-plugins-base1.0-dev icnsutils
    - name: install qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
    - name: add qt to path
      run: echo "$Qt5_Dir/bin" >> $GITHUB_PATH
    - name: qt check version
      run: qmake --version
    - name: build
      run: ./build.sh debug
    - name: check size of europacash-wallet-gui
      run: ls -l build/debug/bin/europacash-wallet-gui
    - name: test qml
      run: xvfb-run -a build/debug/bin/europacash-wallet-gui --test-qml
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static -j3
        cp build/release/bin/* ../build/debug/bin/
      working-directory: monero
    - name: deploy - create directory structure, copy files
      run: |
        mkdir -p AppDir/usr/{bin,lib,share}
        mkdir -p AppDir/usr/share/{applications,icons}
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        mv bin/europacash-wallet-gui AppDir/usr/bin
        cp bin/europacashd AppDir/usr/bin
        icns2png -x ../../images/appicon.icns
        mv appicon_256x256x32.png AppDir/usr/share/icons/hicolor/256x256/apps/europacash-wallet-gui.png
      working-directory: build/debug
    - name: deploy - create desktop file
      run: |
        echo "[Desktop Entry]" >> europacash-wallet-gui.desktop
        echo "Type=Application" >> europacash-wallet-gui.desktop
        echo "Name=europacash-wallet-gui" >> europacash-wallet-gui.desktop
        echo "Comment=GUI wallet for EuropaCash cryptocurrency" >> europacash-wallet-gui.desktop
        echo "Exec=europacash-wallet-gui" >> europacash-wallet-gui.desktop
        echo "Icon=europacash-wallet-gui" >> europacash-wallet-gui.desktop
        echo "Categories=Finance;" >> europacash-wallet-gui.desktop
      working-directory: build/debug/AppDir/usr/share/applications
    - name: deploy - run linuxdeployqt
      run: |
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/8/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage AppDir/usr/share/applications/europacash-wallet-gui.desktop -appimage -qmldir=../..
        mv europacash-wallet-gui-*.AppImage bin/europacash-wallet-gui.AppImage
      working-directory: build/debug
    - name: archive
      run: |
        export ARTIFACT_NAME="europacash-gui-linux-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        tar cvzf $ARTIFACT_NAME.tar.bz2 $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/debug
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.tar.bz2
      working-directory: build/debug
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: build/debug/${{ env.ARTIFACT_NAME }}.tar.bz2
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.tar.bz2
        path: build/debug/${{ env.ARTIFACT_NAME }}.tar.bz2
    - name: upload to transfer.sh
      run: curl --upload-file build/debug/${{ env.ARTIFACT_NAME }}.tar.bz2 https://transfer.sh/${{ env.ARTIFACT_NAME }}.tar.bz2

  build-windows:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - uses: eine/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-protobuf-c git mingw-w64-x86_64-hidapi zip curl mingw-w64-x86_64-libtiff mingw-w64-x86_64-libpng mingw-w64-x86_64-pcre mingw-w64-x86_64-pcre2 mingw-w64-x86_64-libmng mingw-w64-x86_64-lcms2 mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-libiconv mingw-w64-x86_64-harfbuzz mingw-w64-x86_64-graphite2 mingw-w64-x86_64-glib2 mingw-w64-x86_64-freetype mingw-w64-x86_64-double-conversion mingw-w64-x86_64-md4c
    - name: install qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        arch: 'win64_mingw73'
    - name: copy qt to /usr/local   # because $GITHUB_PATH doesn't seem to work on msys somehow
      run: |
        mkdir -p /usr/local
        cp -rf $Qt5_Dir/* /usr/local
    - name: check qt version
      run: qmake --version
    - name: build
      run: |
        sed -i 's/CONFIG\ +=\ qtquickcompiler//' europacash-wallet-gui.pro
        ./build.sh release
    - name: test qml
      run: build/release/bin/europacash-wallet-gui --test-qml
    - name: deploy
      run: make deploy
      working-directory: build
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static-win64 -j2
        cp build/release/bin/* ../build/release/bin/
      working-directory: monero
    - name: archive
      run: |
        export ARTIFACT_NAME="europacash-gui-win-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        zip -r9 $ARTIFACT_NAME.zip $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/release
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.zip
      working-directory: build/release
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: build/release/${{ env.ARTIFACT_NAME }}.zip
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.zip
        path: build/release/${{ env.ARTIFACT_NAME }}.zip
    - name: upload to transfer.sh
      run: curl --upload-file build/release/${{ env.ARTIFACT_NAME }}.zip https://transfer.sh/${{ env.ARTIFACT_NAME }}.zip

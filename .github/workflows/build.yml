name: continuous-integration/gh-actions/gui

on: [push, pull_request]

jobs:
  build-macos:

    runs-on: macOS-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: install dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install boost openssl zmq libpgm miniupnpc ldns expat libunwind-headers protobuf qt5 
    - name: force link qt5
      run: brew link qt5 --force
    - name: fetch zmq.hpp
      run: brew tap osrf/simulation && brew install cppzmq
    - name: build
      run: export PATH=$PATH:/usr/local/opt/qt/bin && ./build.sh
    - name: test qml
      run: build/release/bin/aeon-wallet-gui.app/Contents/MacOS/aeon-wallet-gui --test-qml
    - name: deploy
      run: make deploy
      working-directory: build
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static -j3
        cp build/release/bin/* ../build/release/bin/
      working-directory: monero
    - name: archive
      run: |
        export ARTIFACT_NAME="aeon-gui-mac-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        tar cvzf $ARTIFACT_NAME.tar.bz2 $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/release
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.tar.bz2
      working-directory: build/release
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.tar.bz2
        path: build/release/${{ env.ARTIFACT_NAME }}.tar.bz2
    - name: upload to transfer.sh
      run: curl --upload-file build/release/${{ env.ARTIFACT_NAME }}.tar.bz2 https://transfer.sh/${{ env.ARTIFACT_NAME }}.tar.bz2

  build-ubuntu:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install aeon dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libnorm-dev libpgm-dev
    - name: install aeon gui dependencies
      run: sudo apt -y install qtbase5-dev qt5-default qtdeclarative5-dev qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-dialogs qml-module-qtquick-xmllistmodel qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel qttools5-dev-tools qml-module-qtquick-templates2 libqt5svg5-dev xvfb
    - name: build
      run: ./build.sh
    - name: test qml
      run: xvfb-run -a build/release/bin/aeon-wallet-gui --test-qml
    - name: deploy
      run: make deploy
      working-directory: build
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static -j3
        cp build/release/bin/* ../build/release/bin/
      working-directory: monero
    - name: archive
      run: |
        export ARTIFACT_NAME="aeon-gui-linux-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        tar cvzf $ARTIFACT_NAME.tar.bz2 $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/release
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.tar.bz2
      working-directory: build/release
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.tar.bz2
        path: build/release/${{ env.ARTIFACT_NAME }}.tar.bz2
    - name: upload to transfer.sh
      run: curl --upload-file build/release/${{ env.ARTIFACT_NAME }}.tar.bz2 https://transfer.sh/${{ env.ARTIFACT_NAME }}.tar.bz2

  build-windows:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - uses: eine/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-protobuf-c git mingw-w64-x86_64-qt5 mingw-w64-x86_64-hidapi zip curl
    - name: build
      run: |
        sed -i 's/CONFIG\ +=\ qtquickcompiler//' aeon-wallet-gui.pro
        ./build.sh release
    - name: test qml
      run: build/release/bin/aeon-wallet-gui --test-qml
    - name: deploy
      run: make deploy
      working-directory: build
    - name: build CLI
      run: |
        rm -rf build/
        USE_SINGLE_BUILDDIR=1 make release-static-win64 -j2
        cp build/release/bin/* ../build/release/bin/
      working-directory: monero
    - name: archive
      run: |
        export ARTIFACT_NAME="aeon-gui-win-x64-$(git describe --tags)"
        mkdir $ARTIFACT_NAME
        cp -rf bin/* $ARTIFACT_NAME
        zip -r9 $ARTIFACT_NAME.zip $ARTIFACT_NAME
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      working-directory: build/release
    - name: SHA256 checksum
      run: openssl sha256 ${{ env.ARTIFACT_NAME }}.zip
      working-directory: build/release
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}.zip
        path: build/release/${{ env.ARTIFACT_NAME }}.zip
    - name: upload to transfer.sh
      run: curl --upload-file build/release/${{ env.ARTIFACT_NAME }}.zip https://transfer.sh/${{ env.ARTIFACT_NAME }}.zip
